if("undefined"===typeof React)var React=require("react");
(function(){function f(a){return"[object Array]"===Object.prototype.toString.call(a)}function k(a){return"undefined"===typeof a}function u(a){return"object"!==typeof a||"[object Array]"===Object.prototype.toString.call(a)?!1:!0}function c(a,b){if("string"===typeof a)if(~"warn debug error log info exception assert".split(" ").indexOf(a,0))console[a]("Flocks2 ["+a+"] "+b.toString());else console.log("Flocks2 [Unknown level] "+b.toString());else k(d.flocks2Config)?console.log("Flocks2 pre-config ["+
a.toString()+"] "+b.toString()):d.flocks2Config.log_level>=a&&console.log("Flocks2 ["+a.toString()+"] "+b.toString())}function l(){c(3," - Flocks2 attempting update");if(!v)return c(1," x Flocks2 skipped update: root is not initialized"),null;if(m)return c(1," x Flocks2 skipped update: lock count updateBlocks is non-zero"),null;if(!w(d))return c(0,"   ! Flocks2 rolling back update: handler rejected propset"),d=n,null;n=d;c(3,"   - Flocks2 update passed");"detatched"===n.flocks2Config.target?c(3,"   - Flocks2 skipping render because explicitly detatched"):
(c(3,"   - Flocks2 rendering"),React.render(React.createFactory(q)({flocks2context:d}),n.flocks2Config.target));c(3,"   - Flocks2 update complete; finalizing");x();return!0}function y(a,b){if("string"!==typeof a)throw b||"Argument must be a string";}function z(a,b){if(!f(a))throw b||"Argument must be an array";}function A(a,b){if(!u(a))throw b||"Argument must be a non-array object";}function B(a,b,c){var d;if(!f(a))throw"Path must be an array!";if(0===a.length)return b;if(1===a.length)return d=b[a[0]],
b[a[0]]=c,d;if(-1!==["string","number"].indexOf(typeof a[0]))return d=a.splice(1,Number.MAX_VALUE),B(d,b[a[0]],c)}function C(a,b){z(a,"Flocks2 setByPathh/2 must take an array for its key");c(1,'   - Flocks2 setByPath "'+a.join("|")+'"');B(a,d,b);l()}function r(a,b){c(3," - Flocks2 multi-set");if("string"===typeof a)y(a,"Flocks2 set/2 must take a string for its key"),d[a]=b,c(1,'   - Flocks2 setByKey "'+a+'"'),l();else if(f(a))C(a,b);else throw"Flocks2 set/1,2 key must be a string or an array";}function D(a,
b){var c;if(!f(a))throw"path must be an array!";if(0===a.length)return b;if(1===a.length)return b[a[0]];if(-1!==["string","number"].indexOf(typeof a[0]))return c=a.splice(1,Number.MAX_VALUE),D(c,b[a[0]])}function E(a){return D(a,n)}function F(a){console.log("ERROR: stub called!");A(a,"Flocks2 update/1 must take a plain object")}function I(){++m}function G(){if(0>=m)throw"unlock()ed with no lock!";--m;l()}function t(a){var b=a.constructor(),c;if(null===a||"object"!==typeof a)return a;for(c in a)a.hasOwnProperty(c)&&
(b[c]=a[c]);return b}function H(a){if(k(a))return[p];if(f(a)){if(~a.indexOf(p,0))return a;a=t(a);a.push(p);return a}throw"Original mixin list must be an array or undefined!";}var p,h,v=!1,m=0,q,w=function(a){return!0},x=function(){return!0},n={},d={};h={flocks2context:React.PropTypes.object};p={contextTypes:h,childContextTypes:h,componentWillMount:function(){c(1," - Flocks2 component will mount: "+this.constructor.displayName);c(3,k(this.props.flocks2context)?"   - No F2 Context Prop":"   - F2 Context Prop found");
c(3,k(this.context.flocks2context)?"   - No F2 Context":"   - F2 Context found");this.props.flocks2context&&(this.context.flocks2context=this.props.flocks2context);this.fupdate=function(a){return F(a)};this.fgetpath=function(a,b){return E(a,b)};this.fset=function(a,b){return r(a,b)};this.fsetpath=function(a,b){return r(a,b)};this.flock=function(){++m};this.funlock=function(){return G()};this.fctx=this.context.flocks2context},getChildContext:function(){return this.context}};h={version:"1.2.0",createClass:function(a){a.mixins=
H(a.mixins);return React.createClass(a)},mount:function(a,b){var g=a||{},f=b||{},e=function(){console.log("ERROR: stub called!");l()},e={get:e,override:e,clear:e,get_path:E,set:r,set_path:C,update:F,lock:I,unlock:G};g.log_level=g.log_level||-1;q=g.control;f.flocks2Config=g;d=f;c(1,"Flocks2 root creation begins");if(!q)throw"Flocks2 fatal error: must provide a control in create/2 FlocksConfig";g.handler&&(w=g.handler,c(3," - Flocks2 handler assigned"));g.finalizer&&(x=g.finalizer,c(3," - Flocks2 finalizer assigned"));
g.preventAutoContext?c(2," - Flocks2 skipping auto-context"):(c(2," - Flocks2 engaging auto-context"),this.fctx=t(d));c(3,"Flocks2 creation finished; initializing");v=!0;l();c(3,"Flocks2 expose updater");this.fupd=e;this.fset=e.set;this.fgetpath=e.get_path;this.flock=e.lock;this.funlock=e.unlock;this.fupdate=e.update;c(3,"Flocks2 initialization finished");return e},clone:t,isArray:f,isUndefined:k,isNonArrayObject:u,enforceString:y,enforceArray:z,enforceNonArrayObject:A,atLeastFlocks:H,plumbing:p};
"undefined"!==typeof module?module.exports=h:window.flocks=h})();
